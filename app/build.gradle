/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/8.0.2/userguide/building_java_projects.html
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'java'
    id 'application'
    id 'eclipse'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
    maven { url = uri("https://repo.papermc.io/repository/maven-public/") }
    maven { url = uri("https://repo.onarandombox.com/content/groups/public/") }
    maven {
        url 'https://repo.smashmc.eu/public'
        name 'smashmc-public'
    }
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter:5.9.1'

    // This dependency is used by the application.
    implementation 'com.google.guava:guava:31.1-jre'
    compileOnly 'io.papermc.paper:paper-api:1.20.2-R0.1-SNAPSHOT'
    compileOnly 'com.onarandombox.multiversecore:multiverse-core:4.3.12'
    compileOnly 'com.onarandombox.multiversenetherportals:Multiverse-NetherPortals:4.2.2'
    implementation 'de.liquiddev:commands:1.3.0'
}

application {
    // Define the main class for the application.
    mainClass = 'mvtp.rapper.App'
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}

java {
    toolchain.languageVersion.set(JavaLanguageVersion.of(17))
}
